/*
 * File: app/view/Customers.js
 *
 * This file was generated by Sencha Architect version 3.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.Customers', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.customers',

    padding: 10,
    layout: {
        align: 'stretch',
        padding: 10,
        type: 'vbox'
    },
    title: 'Customers',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'container',
                    height: 210,
                    layout: {
                        align: 'stretch',
                        type: 'hbox'
                    },
                    items: [
                        {
                            xtype: 'chart',
                            flex: 1,
                            height: 250,
                            width: 400,
                            animate: true,
                            insetPadding: 20,
                            store: 'CustomerCategories',
                            axes: [
                                {
                                    type: 'Category',
                                    fields: [
                                        'category'
                                    ],
                                    dashSize: 0,
                                    title: '',
                                    position: 'bottom'
                                },
                                {
                                    type: 'Numeric',
                                    fields: [
                                        'currentQtrTotal',
                                        'priorQtrTotal'
                                    ],
                                    label: {
                                        renderer: Ext.util.Format.currency
                                    },
                                    title: '',
                                    position: 'left'
                                }
                            ],
                            series: [
                                {
                                    type: 'column',
                                    renderer: function(sprite, record, attributes, index, store) {
                                        var colors = ['#3299cc', '#9bcde7', '#4db8ed', '#a6dcf6', '#8ebf2b', '#c6e192', '#1e7069', '#8eb8b4'];
                                        attributes.fill = colors[index];
                                        return attributes;
                                    },
                                    tips: '{\n    trackMouse: true,\n    renderer: function(record, item) {\n        var quarter = item.yField === \'priorQtrTotal\' ? \'Previous Quarter\' : \'Current Quarter\';\n        this.update(quarter + \': \' + Ext.util.Format.currency(record.get(item.yField)));\n    }',
                                    title: [
                                        'Previous Quarter',
                                        'Current Quarter'
                                    ],
                                    xField: 'category',
                                    yField: [
                                        'priorQtrTotal',
                                        'currentQtrTotal'
                                    ],
                                    groupGutter: 0,
                                    gutter: 20
                                }
                            ]
                        },
                        {
                            xtype: 'image',
                            width: 200,
                            src: 'resources/images/pingpong.gif'
                        }
                    ]
                },
                {
                    xtype: 'gridpanel',
                    flex: 1,
                    title: '',
                    disableSelection: true,
                    store: 'Customers',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'customerId',
                            text: 'CustomerId'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'name',
                            text: 'Name'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'address',
                            text: 'Address'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'city',
                            text: 'City'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'state',
                            text: 'State'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'zip',
                            text: 'Zip'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'phone',
                            text: 'Phone'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'fax',
                            text: 'Fax'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'category',
                            text: 'Category'
                        },
                        {
                            xtype: 'numbercolumn',
                            dataIndex: 'balance',
                            text: 'Balance'
                        }
                    ],
                    listeners: {
                        itemclick: {
                            fn: me.onGridpanelItemClick,
                            scope: me
                        }
                    }
                }
            ]
        });

        me.callParent(arguments);
    },

    onGridpanelItemClick: function(dataview, record, item, index, e, eOpts) {
        this.fireEvent('customerselect', record);
    }

});